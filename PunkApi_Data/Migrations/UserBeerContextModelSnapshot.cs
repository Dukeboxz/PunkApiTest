// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PunkApi_Data.Models;

#nullable disable

namespace PunkApi_Data.Migrations
{
    [DbContext(typeof(UserBeerContext))]
    partial class UserBeerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeerId"), 1L, 1);

                    b.Property<double>("Abv")
                        .HasColumnType("float");

                    b.Property<int>("ApiId")
                        .HasColumnType("int");

                    b.Property<double>("AttenuationLevel")
                        .HasColumnType("float");

                    b.Property<string>("BrewersTips")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContributedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ebc")
                        .HasColumnType("int");

                    b.Property<string>("FirstBrewed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ibu")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ph")
                        .HasColumnType("float");

                    b.Property<int>("Srm")
                        .HasColumnType("int");

                    b.Property<string>("Tagline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetFg")
                        .HasColumnType("int");

                    b.Property<int>("TargetOg")
                        .HasColumnType("int");

                    b.HasKey("BeerId");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("PunkApi_Data.Models.UserBeers", b =>
                {
                    b.Property<int>("UserFavouritesId")
                        .HasColumnType("int");

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.HasKey("UserFavouritesId", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("UserBeers");
                });

            modelBuilder.Entity("PunkApi_Data.Models.UserFavourites", b =>
                {
                    b.Property<int>("UserFavouritesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserFavouritesId"), 1L, 1);

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserFavouritesId");

                    b.ToTable("UserFavourites");
                });

            modelBuilder.Entity("PunkApi_Data.Models.UserBeers", b =>
                {
                    b.HasOne("Beer", "Beer")
                        .WithMany("UserBeers")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PunkApi_Data.Models.UserFavourites", "UserFavourites")
                        .WithMany("UserBeers")
                        .HasForeignKey("UserFavouritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("UserFavourites");
                });

            modelBuilder.Entity("Beer", b =>
                {
                    b.Navigation("UserBeers");
                });

            modelBuilder.Entity("PunkApi_Data.Models.UserFavourites", b =>
                {
                    b.Navigation("UserBeers");
                });
#pragma warning restore 612, 618
        }
    }
}
